<?php

namespace App\SubModels;

use App\Interfaces\SubModel;
use App\Product;
use App\ProductCategory;
use App\ProductSubCategory;
use App\Scopes\ConstructionAdditionScope;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Collection;
use Illuminate\Support\Facades\Cache;

/**
 * App\SubModels\ConstructionAddition
 *
 * @property int $id
 * @property string $sku
 * @property float $price
 * @property int $product_category_id
 * @property int|null $product_sub_category_id
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @property-read \App\ProductCategory $category
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Color[] $colors
 * @property-read int|null $colors_count
 * @property-read mixed $long_description
 * @property-read mixed $name
 * @property-read mixed $short_description
 * @property-read mixed $units
 * @property-read \Illuminate\Database\Eloquent\Collection|\Spatie\MediaLibrary\Models\Media[] $media
 * @property-read int|null $media_count
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Option[] $options
 * @property-read int|null $options_count
 * @property-read \App\ProductSubCategory|null $subCategory
 * @method static \Illuminate\Database\Eloquent\Builder|\App\SubModels\ConstructionAddition newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\SubModels\ConstructionAddition newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\SubModels\ConstructionAddition query()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\SubModels\ConstructionAddition whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\SubModels\ConstructionAddition whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\SubModels\ConstructionAddition wherePrice($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\SubModels\ConstructionAddition whereProductCategoryId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\SubModels\ConstructionAddition whereProductSubCategoryId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\SubModels\ConstructionAddition whereSku($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\SubModels\ConstructionAddition whereUpdatedAt($value)
 * @mixin \Eloquent
 */
class ConstructionAddition extends Product implements SubModel
{
    protected  $table = 'products';

    protected $appends = ['short_description', 'long_description', 'units', 'name'];

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::addGlobalScope(new ConstructionAdditionScope);
    }

    public function getShortDescriptionAttribute()
    {
        return Cache::rememberForever('short_description_' . $this->id, function (){
            return $this->options()->where('key', 'short_description')->first()->value ?? '?';
        });
    }

    public function getLongDescriptionAttribute()
    {
        return Cache::rememberForever('long_description_' . $this->id, function (){
            return $this->options()->where('key', 'long_description')->first()->value ?? '?';
        });
    }

    public function getUnitsAttribute()
    {
        return [];
    }

    public function getNameAttribute()
    {
        return $this->short_description;
    }


    public static function getResponseData(Collection $products)
    {
        // Group our colors by sub-category ID
        $groupedProducts = $products->mapToGroups(function ($item, $key) {
            return [$item['product_sub_category_id'] => $item];
        });

        $subCategories = ProductSubCategory::where('product_category_id', ProductCategory::CONSTRUCTION_ADDITIONS)
            ->select('id', 'name')
            ->withCount('products')->get()->toArray();

           return [
               'products' => $groupedProducts,
               'subCategories' => $subCategories,
           ];
    }
}
